{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-img.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-e806d1f6.js';\nimport { b as getIonMode } from './ionic-global-9d5c8ee3.js';\n\nconst imgCss = \":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\n\nconst Img = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\n    this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\n    this.ionError = createEvent(this, \"ionError\", 7);\n    this.onLoad = () => {\n      this.ionImgDidLoad.emit();\n    };\n    this.onError = () => {\n      this.ionError.emit();\n    };\n  }\n  srcChanged() {\n    this.addIO();\n  }\n  componentDidLoad() {\n    this.addIO();\n  }\n  addIO() {\n    if (this.src === undefined) {\n      return;\n    }\n    if (typeof window !== 'undefined' &&\n      'IntersectionObserver' in window &&\n      'IntersectionObserverEntry' in window &&\n      'isIntersecting' in window.IntersectionObserverEntry.prototype) {\n      this.removeIO();\n      this.io = new IntersectionObserver(data => {\n        // because there will only ever be one instance\n        // of the element we are observing\n        // we can just use data[0]\n        if (data[0].isIntersecting) {\n          this.load();\n          this.removeIO();\n        }\n      });\n      this.io.observe(this.el);\n    }\n    else {\n      // fall back to setTimeout for Safari and IE\n      setTimeout(() => this.load(), 200);\n    }\n  }\n  load() {\n    this.loadError = this.onError;\n    this.loadSrc = this.src;\n    this.ionImgWillLoad.emit();\n  }\n  removeIO() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  render() {\n    return (h(Host, { class: getIonMode(this) }, h(\"img\", { decoding: \"async\", src: this.loadSrc, alt: this.alt, onLoad: this.onLoad, onError: this.loadError, part: \"image\" })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"src\": [\"srcChanged\"]\n  }; }\n};\nImg.style = imgCss;\n\nexport { Img as ion_img };\n"],"sourceRoot":"webpack:///","file":"13-es5.js"}