{"version":3,"sources":["./src/app/pages/reset-password/reset-password.page.html","./src/app/pages/reset-password/reset-password.module.ts","./src/app/pages/reset-password/reset-password.page.scss","./src/app/pages/reset-password/reset-password.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,2Z;;;;;;;;;;;;;;;;;;;;;;;ACA0B;AACM;AACF;AACU;AACV;AACyB;AAEZ;AAE1D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAiB;KAC7B;CACF,CAAC;AAaF,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;AAA1B,uBAAuB;IAXnC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,8EAAgB;YAChB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,sEAAiB,CAAC;QACjC,OAAO,EAAE,CAAC,sEAAiB,CAAC;KAC7B,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;AC3BpC;AAAe,6GAA8C,mK;;;;;;;;;;;;;;;;;;ACAX;AACO;AAOzD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAM5B,YAAoB,KAAa,EAAU,cAA8B;QAArD,UAAK,GAAL,KAAK,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAHzE,cAAS,GAAQ,EAAE,CAAC;QACpB,WAAM,GAAa,EAAE,CAAC;QAGpB,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACjE,CAAC;IAED,QAAQ,KAAI,CAAC;IAEb,WAAW;QACT,+BAA+B;QAC/B,4BAA4B;QAC5B,0BAA0B;QAC1B,wBAAwB;QACxB,gEAAgE;QAChE,YAAY;QACZ,wBAAwB;QACxB,+BAA+B;QAC/B,UAAU;IACZ,CAAC;IAED,aAAa;QACX,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5B;QACD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC7B;QACD,IACE,IAAI,CAAC,SAAS,CAAC,MAAM;YACrB,IAAI,CAAC,SAAS,CAAC,OAAO;YACtB,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,IAAI,CAAC,SAAS,CAAC,OAAO,EAChD;YACA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC9B;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;YAC3B,sCAAsC;YACtC,iCAAiC;SAClC;IACH,CAAC;CACF;;YAtC4B,sDAAM;YAA0B,8DAAc;;AAN9D,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,0OAAyC;;KAE1C,CAAC;2EAO2B,sDAAM,EAA0B,8DAAc;GAN9D,iBAAiB,CA4C7B;AA5C6B","file":"src-app-pages-reset-password-reset-password-module-es2015.js","sourcesContent":["export default \"<!--\\n  Generated template for the ResetPasswordPage page.\\n\\n  See http://ionicframework.com/docs/components/#navigation for more info on\\n  Ionic pages and navigation.\\n-->\\n<ion-header>\\n\\n  <ion-toolbar>\\n    <ion-title>reset-password</ion-title>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n\\n<ion-content class=\\\"ion-padding\\\">\\n\\n</ion-content>\\n\"","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { ComponentsModule } from \"../../components/components.module\";\n\nimport { ResetPasswordPage } from \"./reset-password.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ResetPasswordPage,\n  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentsModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [ResetPasswordPage],\n  exports: [ResetPasswordPage],\n})\nexport class ResetPasswordPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: \"reset-password\",\n  templateUrl: \"./reset-password.page.html\",\n  styleUrls: [\"./reset-password.page.scss\"],\n})\nexport class ResetPasswordPage implements OnInit {\n  userEmail: string;\n  userToken: string;\n  userInput: any = {};\n  errors: string[] = [];\n\n  constructor(private route: Router, private activatedRoute: ActivatedRoute) {\n    this.userEmail = activatedRoute.snapshot.paramMap.get(\"email\");\n    this.userToken = activatedRoute.snapshot.paramMap.get(\"token\");\n  }\n\n  ngOnInit() {}\n\n  submitReset() {\n    //  if ( this.validateInput() )\n    // authservice.sendResetPost\n    //    .subscribe(data => {\n    //          launchtoast;\n    //          set the currentUser stuff to true and log person in.\n    //        },\n    //        ( error ) => {\n    //        'there was a problem'\n    //      })\n  }\n\n  validateInput() {\n    if (!this.userInput.passwd) {\n      this.errors.push(\"passwd\");\n    }\n    if (!this.userInput.passwd2) {\n      this.errors.push(\"passwd2\");\n    }\n    if (\n      this.userInput.passwd &&\n      this.userInput.passwd2 &&\n      this.userInput.passwd !== this.userInput.passwd2\n    ) {\n      this.errors.push(\"no_match\");\n    }\n    if (this.errors.length == 0) {\n      //authservice.validatePasswordStrength\n      // { this.errors.push('invalid')}\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}