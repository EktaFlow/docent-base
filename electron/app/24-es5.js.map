{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,WAAA,EAAA,YAAA;AAAA,aAAA,KAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,iBAAA,EAAA,YAAA;AAAA,aAAA,UAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,+CAAA,GAAA,mBAAA;AAAA;AAAA,2DAAA,CAAA;AAAA;;;AAAA,QAAA,sDAAA,GAAA,mBAAA;AAAA;AAAA,kEAAA,CAAA;AAAA;;;AAAA,QAAA,iDAAA,GAAA,mBAAA;AAAA;AAAA,6DAAA,CAAA;AAAA;;;AAAA,QAAA,+CAAA,GAAA,mBAAA;AAAA;AAAA,2DAAA,CAAA;;AAKA,QAAA,WAAA,GAAA,+3FAAA;AAEA,QAAA,UAAA,GAAA,itGAAA;;AAEA,QAAA,KAAA;AACA,qBAAA,OAAA,EAAA;AAAA;;AAAA;;AACI,QAAA,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAgB,IAAhB,EAAgB,OAAhB;AACJ,aAAA,QAAA,GAAoB,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,UAAX,EAAW,CAAX,CAApB;AACA,aAAA,QAAA,GAAoB,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,UAAX,EAAW,CAAX,CAApB;AACA,aAAA,OAAA,GAAmB,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,SAAX,EAAW,CAAX,CAAnB;AACA,aAAA,OAAA,oBAA6B,cAAA,EAA7B;AACA,aAAA,UAAA,GAAA,IAAA;AACA;;;;AAGA,aAAA,OAAA,GAAA,KAAA;AACA;;;;;AAIA,aAAA,cAAA,GAAA,CAAA,CAAA;AACA;;;;AAGA,aAAA,IAAA,GAAA,KAAA,OAAA;AACA;;;;AAGA,aAAA,QAAA,GAAA,KAAA;;AACA,aAAA,WAAA,GAAA,YAAA;AACA,cAAA,KAAA,CAAA,UAAA,EAAA;AACA,YAAA,KAAA,CAAA,OAAA,GAAA,KAAA,CAAA,UAAA,CAAA,KAAA,KAAA,KAAA,CAAA,KAAA;AACA;AACA,SAJA;;AAKA,aAAA,OAAA,GAAA,YAAA;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,IAAA;AACA,SAFA;;AAGA,aAAA,MAAA,GAAA,YAAA;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA;AACA,SAFA;AAGA;AACA;;;AArCA;AAAA;AAAA;AAAA,kFAsCA,iBAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,EAAA,CAAA,eAAA;AACA,oBAAA,EAAA,CAAA,cAAA;AACA,yBAAA,EAAA,CAAA,KAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAtCA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA2CA;;AA3CA;AAAA;AAAA;AAAA,2FA4CA,kBAAA,KAAA;AAAA;AAAA;AAAA;AAAA;AACA,yBAAA,cAAA,GAAA,KAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA5CA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,eA+CA,6BAAA;AACA,cAAA,KAAA,KAAA,KAAA,SAAA,EAAA;AACA,iBAAA,KAAA,GAAA,KAAA,OAAA;AACA;;AACA,cAAA,UAAA,GAAA,KAAA,UAAA,GAAA,KAAA,EAAA,CAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,cAAA,UAAA,EAAA;AACA,iBAAA,WAAA;AACM,YAAA,MAAA,CAAA,iDAAA,CAAA,GAAA,CAAA,CAAA,CAAgB,UAAhB,EAAgB,WAAhB,EAAgB,KAAA,WAAhB;AACN;AACA;AAxDA;AAAA;AAAA,eAyDA,gCAAA;AACA,cAAA,UAAA,GAAA,KAAA,UAAA;;AACA,cAAA,UAAA,EAAA;AACM,YAAA,MAAA,CAAA,iDAAA,CAAA,GAAA,CAAA,CAAA,CAAmB,UAAnB,EAAmB,WAAnB,EAAmB,KAAA,WAAnB;AACN,iBAAA,UAAA,GAAA,IAAA;AACA;AACA;AA/DA;AAAA;AAAA,eAgEA,6BAAA;AACA,eAAA,SAAA;AACA;AAlEA;AAAA;AAAA,eAmEA,qBAAA;AACA,eAAA,QAAA,CAAA,IAAA,CAAA;AACA,6BAAA,KAAA,OADA;AAEA,oCAAA,KAAA;AAFA,WAAA;AAIA;AAxEA;AAAA;AAAA,eAyEA,kBAAA;AAAA;;AAAA,cACW,OADX,GACmE,IADnE,CACW,OADX;AAAA,cACW,QADX,GACmE,IADnE,CACW,QADX;AAAA,cACW,OADX,GACmE,IADnE,CACW,OADX;AAAA,cACW,KADX,GACmE,IADnE,CACW,KADX;AAAA,cACW,EADX,GACmE,IADnE,CACW,EADX;AAAA,cACW,cADX,GACmE,IADnE,CACW,cADX;AAEA,cAAA,IAAA,GAAiB,MAAA,CAAA,sDAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAAjB;;AAFA,wBAG0C,MAAA,CAAA,iDAAA,CAAA,GAAA,CAAA,CAAA,CAAY,EAAZ,EAAY,OAAZ,CAH1C;AAAA,cAGW,KAHX,WAGW,KAHX;AAAA,cAGW,OAHX,WAGW,OAHX;AAAA,cAGW,SAHX,WAGW,SAHX;;AAIA,iBAAY,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAE,+CAAA,CAAA,GAAA,CAAF,EAAM;AAAG,sCAAoB,OAApB,CAAH;AAA+B,2BAAA,QAAA,GAAA,MAAA,GAAA,IAA/B;AAA+B,+BAAA,KAAA,GAAA,OAAA,GAAA,IAA/B;AAA+B,YAAA,IAAA,EAAA,OAA/B;AAA+B,YAAA,QAAA,EAAA,cAA/B;AAA+B,YAAA,OAAA,EAAA,KAAA,OAA/B;AAA+B,YAAA,MAAA,EAAA,KAAA,MAA/B;AAA+B,qBAAmL,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAkB,KAAlB,4CACpO,IADoO,EACpO,IADoO,6BAEpO,SAFoO,EAEjN,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,UAAX,EAAW,EAAX,CAFiN,6BAGpO,aAHoO,EAGpO,IAHoO,6BAIpO,eAJoO,EAIpO,OAJoO,6BAKpO,gBALoO,EAKpO,QALoO;AAAlN,WAAN,EAMA,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,KAAD,EAAC;AAAS,qBAAA,YAAT;AAAS,YAAA,IAAA,EAAA;AAAT,WAAD,EAAqD,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,KAAD,EAAC;AAAS,qBAAA,aAAT;AAAS,YAAA,IAAA,EAAA;AAAT,WAAD,CAArD,EAAuG,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,KAAD,EAAC;AAAS,qBAAA;AAAT,WAAD,CAAvG,CANA,EAM6I,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,OAAD,EAAC;AAAW,YAAA,OAAA,EAAA;AAAX,WAAD,EAA+B,SAA/B,CAN7I,EAM0L,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,OAAD,EAAC;AAAW,YAAA,IAAA,EAAA,OAAX;AAAW,YAAA,OAAA,EAAA,OAAX;AAAW,YAAA,QAAA,EAAA,QAAX;AAAW,YAAA,QAAA,EAAA,IAAX;AAAW,YAAA,EAAA,EAAA;AAAX,WAAD,CAN1L,CAAZ;AAOA;AApFA;AAAA;AAAA,aAqFA,eAAA;AAAY,iBAAQ,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAAR;AAAyB;AArFrC;AAAA;AAAA,aAsFA,eAAA;AAAyB,iBAAA;AACzB,qBAAA,CAAA,WAAA,CADyB;AAEzB,uBAAA,CAAA,WAAA,CAFyB;AAGzB,wBAAA,CAAA,WAAA;AAHyB,WAAA;AAIrB;AA1FJ;;AAAA;AAAA,OAAA;;AA4FA,QAAA,cAAA,GAAA,CAAA;AACA,IAAA,KAAA,CAAA,KAAA,GAAA;AACA,MAAA,GAAA,EAAA,WADA;AAEA,MAAA,EAAA,EAAA;AAFA,KAAA;;AAKA,QAAA,UAAA;AACA,0BAAA,OAAA,EAAA;AAAA;;AAAA;;AACI,QAAA,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAgB,IAAhB,EAAgB,OAAhB;AACJ,aAAA,SAAA,GAAqB,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,WAAX,EAAW,CAAX,CAArB;AACA,aAAA,OAAA,oBAA6B,aAAA,EAA7B;AACA,aAAA,OAAA,aAAsB,KAAA,OAAtB;AACA;;;;AAGA,aAAA,mBAAA,GAAA,KAAA;AACA;;;;AAGA,aAAA,IAAA,GAAA,KAAA,OAAA;;AACA,aAAA,gBAAA,GAAA,UAAA,KAAA,EAAA;AACA,cAAA,MAAA,GAAA,MAAA,CAAA,SAAA,EAAA,CADA,CAEA;;;AACA,cAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,UAAA,KAAA;AAAA,mBAAA,CAAA,KAAA,CAAA,QAAA;AAAA,WAAA,CAAA;AACA,cAAA,OAAA,GAAA,MAAA,CAAA,IAAA,CAAA,UAAA,KAAA;AAAA,mBAAA,KAAA,CAAA,KAAA,KAAA,KAAA,IAAA,CAAA,KAAA,CAAA,QAAA;AAAA,WAAA,CAAA;;AACA,cAAA,CAAA,KAAA,IAAA,CAAA,OAAA,EAAA;AACA;AACA,WAPA,CAQA;AACA;;;AACA,cAAA,SAAA,GAAA,OAAA,IAAA,KAAA;;AAVA,qDAWA,MAXA;AAAA;;AAAA;AAWA,gEAAA;AAAA,kBAAA,KAAA;AACA,kBAAA,QAAA,GAAA,KAAA,KAAA,SAAA,GAAA,CAAA,GAAA,CAAA,CAAA;AACA,cAAA,KAAA,CAAA,iBAAA,CAAA,QAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAeA,SAfA;;AAgBA,aAAA,OAAA,GAAA,UAAA,EAAA,EAAA;AACA,UAAA,EAAA,CAAA,cAAA;AACA,cAAA,aAAA,GAAA,EAAA,CAAA,MAAA,IAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,WAAA,CAAA;;AACA,cAAA,aAAA,EAAA;AACA,gBAAA,YAAA,GAAA,MAAA,CAAA,KAAA;AACA,gBAAA,QAAA,GAAA,aAAA,CAAA,KAAA;;AACA,gBAAA,QAAA,KAAA,YAAA,EAAA;AACA,cAAA,MAAA,CAAA,KAAA,GAAA,QAAA;AACA,aAFA,MAGA,IAAA,MAAA,CAAA,mBAAA,EAAA;AACA,cAAA,MAAA,CAAA,KAAA,GAAA,SAAA;AACA;AACA;AACA,SAbA;AAcA;;AA5CA;AAAA;AAAA,eA6CA,sBAAA,KAAA,EAAA;AACA,eAAA,gBAAA,CAAA,KAAA;AACA,eAAA,SAAA,CAAA,IAAA,CAAA;AAAyB,YAAA,KAAA,EAAA;AAAzB,WAAA;AACA;AAhDA;AAAA;AAAA,eAiDA,4BAAA;AACA,eAAA,gBAAA,CAAA,KAAA,KAAA;AACA;AAnDA;AAAA;AAAA;AAAA,2FAoDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,oBAAA,MAHA,GAGA,KAAA,EAAA,CAAA,aAAA,CAAA,iBAAA,KAAA,KAAA,EAAA,CAAA,aAAA,CAAA,kBAAA,CAHA;;AAIA,wBAAA,MAAA,EAAA;AACA,sBAAA,KADA,GACA,KAAA,KAAA,GAAA,MAAA,CAAA,aAAA,CAAA,WAAA,CADA;;AAEA,0BAAA,KAAA,EAAA;AACA,6BAAA,OAAA,GAAA,KAAA,CAAA,EAAA,GAAA,KAAA,IAAA,GAAA,MAAA;AACA;AACA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WApDA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,eA+DA,qBAAA;AACA,iBAAA,KAAA,CAAA,IAAA,CAAA,KAAA,EAAA,CAAA,gBAAA,CAAA,WAAA,CAAA,CAAA;AACA;AAjEA;AAAA;AAAA,eAkEA,mBAAA,EAAA,EAAA;AACA,cAAA,eAAA,GAAA,CAAA,CAAA,KAAA,EAAA,CAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,cAAA,EAAA,CAAA,MAAA,IAAA,CAAA,KAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,MAAA,CAAA,EAAA;AACA;AACA,WAJA,CAKA;AACA;;;AACA,cAAA,MAAA,GAAA,KAAA,CAAA,IAAA,CAAA,KAAA,EAAA,CAAA,gBAAA,CAAA,WAAA,CAAA,EAAA,MAAA,CAAA,UAAA,KAAA;AAAA,mBAAA,CAAA,KAAA,CAAA,QAAA;AAAA,WAAA,CAAA,CAPA,CAQA;;AACA,cAAA,EAAA,CAAA,MAAA,IAAA,MAAA,CAAA,QAAA,CAAA,EAAA,CAAA,MAAA,CAAA,EAAA;AACA,gBAAA,KAAA,GAAA,MAAA,CAAA,SAAA,CAAA,UAAA,KAAA;AAAA,qBAAA,KAAA,KAAA,EAAA,CAAA,MAAA;AAAA,aAAA,CAAA;AACA,gBAAA,OAAA,GAAA,MAAA,CAAA,KAAA,CAAA;AACA,gBAAA,IAAA,CAHA,CAIA;AACA;;AACA,gBAAA,CAAA,WAAA,EAAA,YAAA,EAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,cAAA,IAAA,GAAA,KAAA,KAAA,MAAA,CAAA,MAAA,GAAA,CAAA,GACA,MAAA,CAAA,CAAA,CADA,GAEA,MAAA,CAAA,KAAA,GAAA,CAAA,CAFA;AAGA,aAVA,CAWA;AACA;;;AACA,gBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,cAAA,IAAA,GAAA,KAAA,KAAA,CAAA,GACA,MAAA,CAAA,MAAA,CAAA,MAAA,GAAA,CAAA,CADA,GAEA,MAAA,CAAA,KAAA,GAAA,CAAA,CAFA;AAGA;;AACA,gBAAA,IAAA,IAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,EAAA;AACA,cAAA,IAAA,CAAA,QAAA,CAAA,EAAA;;AACA,kBAAA,CAAA,eAAA,EAAA;AACA,qBAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AACA;AACA,aAvBA,CAwBA;AACA;AACA;;;AACA,gBAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,mBAAA,KAAA,GAAA,OAAA,CAAA,KAAA;AACA;AACA;AACA;AA1GA;AAAA;AAAA,eA2GA,kBAAA;AAAA,cACW,KADX,GAC4B,IAD5B,CACW,KADX;AAAA,cACW,OADX,GAC4B,IAD5B,CACW,OADX;AAEA,cAAA,IAAA,GAAiB,MAAA,CAAA,sDAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAAjB;AACA,iBAAY,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAE,+CAAA,CAAA,GAAA,CAAF,EAAM;AAAG,YAAA,IAAA,EAAA,YAAH;AAAG,+BAAA,KAAA,GAAA,OAAA,GAAA,IAAH;AAAG,YAAA,OAAA,EAAA,KAAA,OAAH;AAAG,qBAAA;AAAH,WAAN,CAAZ;AACA;AA/GA;AAAA;AAAA,aAgHA,eAAA;AAAY,iBAAQ,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAAR;AAAyB;AAhHrC;AAAA;AAAA,aAiHA,eAAA;AAAyB,iBAAA;AACzB,qBAAA,CAAA,cAAA;AADyB,WAAA;AAErB;AAnHJ;;AAAA;AAAA,OAAA;;AAqHA,QAAA,aAAA,GAAA,CAAA","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-e806d1f6.js';\nimport { b as getIonMode } from './ionic-global-9d5c8ee3.js';\nimport { a as addEventListener, b as removeEventListener, c as getAriaLabel } from './helpers-90f46169.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\n\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host{--color-checked:var(--ion-color-primary, #3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:10px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\";\n\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host{--color:var(--ion-color-step-400, #999999);--color-checked:var(--ion-color-primary, #3880ff);--border-width:2px;--border-style:solid;--border-radius:50%;width:20px;height:20px}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-12px;top:-12px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-12px}:host(.in-item){margin-left:0;margin-right:0;margin-top:9px;margin-bottom:9px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:11px;margin-bottom:10px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Radio = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.inputId = `ion-rb-${radioButtonIds++}`;\n    this.radioGroup = null;\n    /**\n     * If `true`, the radio is selected.\n     */\n    this.checked = false;\n    /**\n     * The tabindex of the radio button.\n     * @internal\n     */\n    this.buttonTabindex = -1;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the radio.\n     */\n    this.disabled = false;\n    this.updateState = () => {\n      if (this.radioGroup) {\n        this.checked = this.radioGroup.value === this.value;\n      }\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  /** @internal */\n  async setFocus(ev) {\n    ev.stopPropagation();\n    ev.preventDefault();\n    this.el.focus();\n  }\n  /** @internal */\n  async setButtonTabindex(value) {\n    this.buttonTabindex = value;\n  }\n  connectedCallback() {\n    if (this.value === undefined) {\n      this.value = this.inputId;\n    }\n    const radioGroup = this.radioGroup = this.el.closest('ion-radio-group');\n    if (radioGroup) {\n      this.updateState();\n      addEventListener(radioGroup, 'ionChange', this.updateState);\n    }\n  }\n  disconnectedCallback() {\n    const radioGroup = this.radioGroup;\n    if (radioGroup) {\n      removeEventListener(radioGroup, 'ionChange', this.updateState);\n      this.radioGroup = null;\n    }\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'radio-checked': this.checked,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  render() {\n    const { inputId, disabled, checked, color, el, buttonTabindex } = this;\n    const mode = getIonMode(this);\n    const { label, labelId, labelText } = getAriaLabel(el, inputId);\n    return (h(Host, { \"aria-checked\": `${checked}`, \"aria-hidden\": disabled ? 'true' : null, \"aria-labelledby\": label ? labelId : null, role: \"radio\", tabindex: buttonTabindex, onFocus: this.onFocus, onBlur: this.onBlur, class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'interactive': true,\n        'radio-checked': checked,\n        'radio-disabled': disabled,\n      }) }, h(\"div\", { class: \"radio-icon\", part: \"container\" }, h(\"div\", { class: \"radio-inner\", part: \"mark\" }), h(\"div\", { class: \"radio-ripple\" })), h(\"label\", { htmlFor: inputId }, labelText), h(\"input\", { type: \"radio\", checked: checked, disabled: disabled, tabindex: \"-1\", id: inputId })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"color\": [\"emitStyle\"],\n    \"checked\": [\"emitStyle\"],\n    \"disabled\": [\"emitStyle\"]\n  }; }\n};\nlet radioButtonIds = 0;\nRadio.style = {\n  ios: radioIosCss,\n  md: radioMdCss\n};\n\nconst RadioGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.inputId = `ion-rg-${radioGroupIds++}`;\n    this.labelId = `${this.inputId}-lbl`;\n    /**\n     * If `true`, the radios can be deselected.\n     */\n    this.allowEmptySelection = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    this.setRadioTabindex = (value) => {\n      const radios = this.getRadios();\n      // Get the first radio that is not disabled and the checked one\n      const first = radios.find(radio => !radio.disabled);\n      const checked = radios.find(radio => (radio.value === value && !radio.disabled));\n      if (!first && !checked) {\n        return;\n      }\n      // If an enabled checked radio exists, set it to be the focusable radio\n      // otherwise we default to focus the first radio\n      const focusable = checked || first;\n      for (const radio of radios) {\n        const tabindex = radio === focusable ? 0 : -1;\n        radio.setButtonTabindex(tabindex);\n      }\n    };\n    this.onClick = (ev) => {\n      ev.preventDefault();\n      const selectedRadio = ev.target && ev.target.closest('ion-radio');\n      if (selectedRadio) {\n        const currentValue = this.value;\n        const newValue = selectedRadio.value;\n        if (newValue !== currentValue) {\n          this.value = newValue;\n        }\n        else if (this.allowEmptySelection) {\n          this.value = undefined;\n        }\n      }\n    };\n  }\n  valueChanged(value) {\n    this.setRadioTabindex(value);\n    this.ionChange.emit({ value });\n  }\n  componentDidLoad() {\n    this.setRadioTabindex(this.value);\n  }\n  async connectedCallback() {\n    // Get the list header if it exists and set the id\n    // this is used to set aria-labelledby\n    const header = this.el.querySelector('ion-list-header') || this.el.querySelector('ion-item-divider');\n    if (header) {\n      const label = this.label = header.querySelector('ion-label');\n      if (label) {\n        this.labelId = label.id = this.name + '-lbl';\n      }\n    }\n  }\n  getRadios() {\n    return Array.from(this.el.querySelectorAll('ion-radio'));\n  }\n  onKeydown(ev) {\n    const inSelectPopover = !!this.el.closest('ion-select-popover');\n    if (ev.target && !this.el.contains(ev.target)) {\n      return;\n    }\n    // Get all radios inside of the radio group and then\n    // filter out disabled radios since we need to skip those\n    const radios = Array.from(this.el.querySelectorAll('ion-radio')).filter(radio => !radio.disabled);\n    // Only move the radio if the current focus is in the radio group\n    if (ev.target && radios.includes(ev.target)) {\n      const index = radios.findIndex(radio => radio === ev.target);\n      const current = radios[index];\n      let next;\n      // If hitting arrow down or arrow right, move to the next radio\n      // If we're on the last radio, move to the first radio\n      if (['ArrowDown', 'ArrowRight'].includes(ev.code)) {\n        next = (index === radios.length - 1)\n          ? radios[0]\n          : radios[index + 1];\n      }\n      // If hitting arrow up or arrow left, move to the previous radio\n      // If we're on the first radio, move to the last radio\n      if (['ArrowUp', 'ArrowLeft'].includes(ev.code)) {\n        next = (index === 0)\n          ? radios[radios.length - 1]\n          : radios[index - 1];\n      }\n      if (next && radios.includes(next)) {\n        next.setFocus(ev);\n        if (!inSelectPopover) {\n          this.value = next.value;\n        }\n      }\n      // Update the radio group value when a user presses the\n      // space bar on top of a selected radio (only applies\n      // to radios in a select popover)\n      if (['Space'].includes(ev.code)) {\n        this.value = current.value;\n      }\n    }\n  }\n  render() {\n    const { label, labelId } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"radiogroup\", \"aria-labelledby\": label ? labelId : null, onClick: this.onClick, class: mode }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"valueChanged\"]\n  }; }\n};\nlet radioGroupIds = 0;\n\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\n"],"sourceRoot":"webpack:///","file":"24-es5.js"}