{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-e806d1f6.js';\nimport { b as getIonMode } from './ionic-global-9d5c8ee3.js';\nimport { c as getAriaLabel, d as renderHiddenInput } from './helpers-90f46169.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\n\nconst checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\n\nconst checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Checkbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-cb-${checkboxIds++}`;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the checkbox is selected.\n     */\n    this.checked = false;\n    /**\n     * If `true`, the checkbox will visually appear as indeterminate.\n     */\n    this.indeterminate = false;\n    /**\n     * If `true`, the user cannot interact with the checkbox.\n     */\n    this.disabled = false;\n    /**\n     * The value of the checkbox does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a checkbox is analogous to the value of an `<input type=\"checkbox\">`,\n     * it's only used when the checkbox participates in a native `<form>`.\n     */\n    this.value = 'on';\n    this.onClick = (ev) => {\n      ev.preventDefault();\n      this.setFocus();\n      this.checked = !this.checked;\n      this.indeterminate = false;\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  checkedChanged(isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value\n    });\n    this.emitStyle();\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'checkbox-checked': this.checked,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  setFocus() {\n    if (this.focusEl) {\n      this.focusEl.focus();\n    }\n  }\n  render() {\n    const { color, checked, disabled, el, indeterminate, inputId, name, value } = this;\n    const mode = getIonMode(this);\n    const { label, labelId, labelText } = getAriaLabel(el, inputId);\n    renderHiddenInput(true, el, name, (checked ? value : ''), disabled);\n    let path = indeterminate\n      ? h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })\n      : h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" });\n    if (mode === 'md') {\n      path = indeterminate\n        ? h(\"path\", { d: \"M2 12H22\", part: \"mark\" })\n        : h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" });\n    }\n    return (h(Host, { onClick: this.onClick, \"aria-labelledby\": label ? labelId : null, \"aria-checked\": `${checked}`, \"aria-hidden\": disabled ? 'true' : null, role: \"checkbox\", class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'checkbox-checked': checked,\n        'checkbox-disabled': disabled,\n        'checkbox-indeterminate': indeterminate,\n        'interactive': true\n      }) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path), h(\"label\", { htmlFor: inputId }, labelText), h(\"input\", { type: \"checkbox\", \"aria-checked\": `${checked}`, disabled: disabled, id: inputId, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: focusEl => this.focusEl = focusEl })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"checked\": [\"checkedChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nlet checkboxIds = 0;\nCheckbox.style = {\n  ios: checkboxIosCss,\n  md: checkboxMdCss\n};\n\nexport { Checkbox as ion_checkbox };\n"],"sourceRoot":"webpack:///","file":"8-es5.js"}